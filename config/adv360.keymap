
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"
    #include "version.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

  combos {
    compatible = "zmk,combos";
    combo_esc {
        timeout-ms = <50>;
        key-positions = <0 1>;
        bindings = <&kp ESC>;
    };
    combo_keypadlayer {
        timeout-ms = <50>;
        key-positions = <30 32>;
        bindings = <&tog 1>;
    };
    combo_navlayer {
        timeout-ms = <50>;
        key-positions = <41 43>;
        bindings = <&tog 4>;
    };
  };
  

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
 &kp EQUAL     &kp N1  &kp N2    &kp N3     &kp N4  &kp N5                 &kp LGUI                                                                     &mo 3  &kp N6    &kp N7     &kp N8    &kp N9    &kp N0  &kp MINUS
   &kp TAB      &kp Q   &kp W     &kp E      &kp R   &kp T            &kp LA(LSHFT)                                                             &kp RA(RSHFT)   &kp Y     &kp U      &kp I     &kp O     &kp P   &kp BSLH
   &kp ESC      &kp A   &kp S     &kp D      &kp F   &kp G            &kp LC(LSHFT)  &kp LCTRL  &kp LALT                   &kp RALT  &kp RCTRL  &kp RC(RSHFT)   &kp H     &kp J      &kp K     &kp L  &kp SEMI    &kp SQT
 &kp LSHFT      &kp Z   &kp X     &kp C      &kp V   &kp B                                      &kp HOME                  &kp PG_UP                             &kp N     &kp M  &kp COMMA   &kp DOT  &kp FSLH  &kp RSHFT
     &mo 2  &kp GRAVE   &none  &kp LEFT  &kp RIGHT                         &kp BSPC    &kp DEL   &kp END                  &kp PG_DN  &kp ENTER      &kp SPACE          &kp DOWN     &kp UP  &kp LBKT  &kp RBKT      &mo 2
            >;
        };

        layer_keypad {
            bindings = <
 &trans      &none       &none      &none      &none         &none                 &kp KP_NUM                                                                                 &to 0         &none      &none      &none       &none      &none  &trans
 &trans      &none   &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_MINUS              &kp KP_DIVIDE                                                                          &kp KP_SLASH  &kp KP_MINUS  &kp KP_N7  &kp KP_N8   &kp KP_N9      &none  &trans
 &trans      &none   &kp KP_N4  &kp KP_N5  &kp KP_N6   &kp KP_PLUS            &kp KP_MULTIPLY     &trans  &kp KP_EQUAL                  &kp KP_EQUAL        &trans  &kp KP_MULTIPLY   &kp KP_PLUS  &kp KP_N4  &kp KP_N5   &kp KP_N6      &none  &trans
 &trans      &none   &kp KP_N1  &kp KP_N2  &kp KP_N3   &kp KP_PLUS                                           &kp SPACE                     &kp SPACE                                  &kp KP_PLUS  &kp KP_N1  &kp KP_N2   &kp KP_N3      &none  &trans
 &trans  &kp COMMA  &kp KP_DOT     &trans     &trans                                &kp KP_N0  &kp ENTER      &kp BSPC                      &kp BSPC  &kp KP_ENTER        &kp KP_N0                   &trans     &trans  &kp KP_DOT  &kp COMMA  &trans
            >;
        };

        layer_fn {
            bindings = <
  &none  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5            &trans                                                   &to 0  &kp F6  &kp F7   &kp F8       &kp F9  &kp F10   &none
  &none   &none   &none   &none   &none   &none            &trans                                                  &trans   &none   &none    &none  &kp RS(F11)    &none   &none
  &none   &none   &none   &none   &none   &none            &trans  &trans  &trans                  &trans  &trans  &trans   &none  &kp F9  &kp F10      &kp F11  &kp F12   &none
 &trans   &none   &none   &none   &none   &none                             &none                   &none                   &none   &none    &none        &none    &none  &trans
 &trans   &none   &none   &none   &none                    &trans  &trans   &none                   &none  &trans  &kp F5           &none    &none        &none    &none  &trans
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                  &none                                                                          &trans   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none            &bootloader                                                                     &bootloader   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none                  &none   &none   &none                  &bt BT_CLR       &none  &rgb_ug RGB_MEFS_CMD 5   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none    &macro_ver         &none                                  &none                       &none                                       &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none                                &none   &none   &none                       &none  &bl BL_TOG         &rgb_ug RGB_TOG          &bl BL_INC  &bl BL_DEC   &none   &none   &none
            >;
        };

        layer_nav {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans            &trans                                                     &to 0        &trans    &trans  &kp PG_UP     &trans         &trans   &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans                                                    &trans        &trans    &trans     &kp UP     &trans         &trans   &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans                  &trans  &trans  &kp HOME  &kp RC(LEFT)  &kp LEFT   &kp DOWN  &kp RIGHT  &kp RC(RIGHT)  &kp END
 &trans  &trans  &trans  &trans  &trans  &trans                            &trans                  &trans                          &trans    &trans  &kp PG_DN     &trans         &trans   &trans
 &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans                  &trans  &trans    &trans                  &trans     &trans     &trans         &trans   &trans
            >;
        };

    };
};
